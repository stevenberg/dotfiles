#!/usr/bin/env ruby

begin
  require "sysrandom/securerandom"
rescue LoadError
  require "securerandom"
end

require "optimist"

options = Optimist.options {
  opt :segment, "Segment size", default: 4
  opt :count, "Number of segments", default: 4
  opt :dashes, "Include dashes between segments", default: true
}

abort "segment must be an integer greater than 0" if options[:segment] <= 0
abort "count must be an integer greater than 0" if options[:count] <= 0

count = options[:count] * options[:segment]

characters = ["A".."Z", "a".."z", "0".."9"].flat_map(&:to_a)

puts Array
  .new(count) { characters[SecureRandom.random_number(characters.size)] }
  .each_slice(options[:segment])
  .map(&:join)
  .join(options[:dashes] ? "-" : "")
